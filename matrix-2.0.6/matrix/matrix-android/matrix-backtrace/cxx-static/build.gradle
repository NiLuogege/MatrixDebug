apply plugin: 'com.android.library'

apply from: rootProject.file('gradle/WeChatNativeDepend.gradle')

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.MIN_SDK_VERSION_FOR_HOOK
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.VERSION_CODE
        versionName rootProject.VERSION_NAME

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        ndk {
            abiFilters rootProject.ABI_FILTERS as String[]
        }

        externalNativeBuild {
            cmake {
                targets = ['wechatbacktrace', 'unwindstack']
                arguments = ['-DANDROID_STL=c++_static',
                             "-DEnableLOG=${gradle.enableLog() ? "ON" : "OFF"}" as String,
                             "-DQUT_STATISTIC_ENABLE=${gradle.enableLog() ? "ON" : "OFF"}" as String]
            }

            exportHeaders {
                from('../src/main/cpp') {
                    include 'common/*.h'
                    moveToDir 'backtrace'
                }
                from('../src/main/cpp/libwechatbacktrace/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
                from('../src/main/cpp/external/libunwindstack/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
                from('../src/main/cpp/dexfile/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
        }
    }

    externalNativeBuild {
        cmake {
            path "../CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['../src/main/java']
            res.srcDirs = ['../src/main/res']
            manifest.srcFile '../src/main/AndroidManifest.xml'
        }
    }

}

apply from: project.file('../dependencies.gradle')

group = rootProject.GROUP
version = "${rootProject.VERSION_NAME}-STATIC"

if("External" == rootProject.ext.PUBLISH_CHANNEL) {
    apply from: rootProject.file('gradle/android-publish.gradle')
}
else {
    apply from: rootProject.file('gradle/WeChatPublish.gradle')
    wechatPublish {
        artifactId = POM_ARTIFACT_ID
    }
}
